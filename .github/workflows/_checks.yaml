# Run checks and test suite.
#
# Usage:
# ```
# jobs:
#   checks:
#     uses: ./.github/workflows/_checks.yaml
# ```
name: Checks

on:
  workflow_call:

jobs:
  pre_commit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/pre-commit

  generate-nox-py-versions:
    runs-on: ubuntu-24.04
    outputs:
      py_version: ${{ steps.set-matrix.outputs.py_version }}
    steps:
    - uses: actions/checkout@v5
    - name: Cache nox Python versions list
      id: cache-nox-py-versions
      uses: actions/cache@v4
      with:
        path: .nox-py-versions.json
        key: nox-py-versions-${{ runner.os }}-${{ hashFiles('noxfile.py', 'pyproject.toml') }}
    - uses: wntrblm/nox@2025.10.16
      if: steps.cache-nox-py-versions.outputs.cache-hit != 'true'
    - id: set-matrix
      shell: bash
      env:
        CACHE_PY_VERSIONS_HIT: ${{ steps.cache-nox-py-versions.outputs.cache-hit }}
      run: |
        # Extract Python versions from nox session names (both selected and skipped)
        # into a JSON array. Session lines start with '*' or '-'.
        if [[ $CACHE_PY_VERSIONS_HIT == "true" ]]; then
          py_version_json="$(cat .nox-py-versions.json)"
        else
          py_version_json="$(
            nox --list \
              | grep -E '^[*-] ' \
              | cut -d' ' -f2 \
              | sed 's/^tests-//' \
              | jq -R -s -c 'split("\n")[:-1]'
          )"
          echo "$py_version_json" > .nox-py-versions.json
        fi
        echo "py_version=$py_version_json" >> "$GITHUB_OUTPUT"

  test:
    needs:
      - pre_commit
      - generate-nox-py-versions
    strategy:
      fail-fast: false
      matrix:
        py_version: ${{ fromJson(needs.generate-nox-py-versions.outputs.py_version) }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v7
        with:
          version: "0.8.22"
          enable-cache: true
      - uses: wntrblm/nox@2025.10.16
        with:
          python-versions: "${{ matrix.py_version }}"
      - run: nox --session "tests-${{ matrix.py_version }}"
